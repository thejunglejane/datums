import argparse
import logging
import sys
import os

'''bin/datums provides entry point main().'''


LOG_FILENAME = os.environ['LOGFILE_NAME']

# Create logger
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)

# Create file handler
handler = logging.FileHandler(os.path.expanduser(LOG_FILENAME))
handler.setLevel(logging.DEBUG)

# Create logging format
formatter = logging.Formatter(
    '%(levelname)s\t%(asctime)s\t%(name)s : %(message)s')
handler.setFormatter(formatter)

# Add handler to logger
logger.addHandler(handler)


def create_parser():
    # Breaking out argument parsing for easier testing
    parser = argparse.ArgumentParser(
        prog='datums', description='PostgreSQL pipeline for Reporter.', usage='%(prog)s [options]')
    parser.add_argument(
        '--add', nargs=1, action='store_true',
        help='Add new report')
    parser.add_argument(
        '--update', nargs=1, action='store_true',
        help='Update existing report')
    parser.add_argument(
        '--delete', nargs=1, action='store_true',
        help='Delete existing report')
    parser.add_argument(
        '--add-new', nargs=0, action='store_true',
        help='Bulk add new reports')
    return parser


def main():
    '''Runs program and handles command line options.'''
    parser = create_parser()
    args = parser.parse_args()


if __name__ == '__main__':
    main()
